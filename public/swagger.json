{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation of Datacrossways. You can find out more about Datacrossways at [https://datacrossways.com](https://datacrossways.com).",
        "version": "1.0.0",
        "title": "Datacrossways API",
        "termsOfService": "http://datacrossways.com/terms/",
        "contact": {
            "email": "alexander.lachmann@mssm.edu"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost:5000",
    "basePath": "/api",
    "tags": [
        {
            "name": "file",
            "description": "Access/modify/upload file resources",
            "externalDocs": {
                "description": "Some endpoints will require Admin rights."
            }
        },
        {
            "name": "collection",
            "description": "Access/modify collection resources",
            "externalDocs": {
                "description": "Collections are equivalent to folders."
            }
        },
        {
            "name": "role",
            "description": "Access/modify user roles",
            "externalDocs": {
                "description": "Resource access if managed through user roles"
            }
        }
        ,
        {
            "name": "user",
            "description": "Access/modify users",
            "externalDocs": {
                "description": "Manages user information and login/logout"
            }
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/file": {
            "get": {
                "tags": [
                    "file"
                ],
                "summary": "List all files in database",
                "description": "This endpoint lists all files in the database. This is an **admin** protected function. Regular users can use either **/user/files** to list files owned by user, or use **/collection/{collection_id}** to retrieve files visible to user scope.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "**successful operation** returns an array of file objects",
                        "schema": {
                            "$ref": "#/definitions/FileList"
                        }
                    },
                    "500": {
                        "description": "**failed operation** returns an error if exception arises during data query"
                    }
                },
                "security": [
                    {
                        "datacrossway_auth": [
                            "admin"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "file"
                ],
                "summary": "Creates file database entry",
                "description": "Create database entry of file only. For proper S3 file upload and database entry use **/file/upload** for small files. Large files will need a multipart upload. This is initialized with **/file/startmultipart**. From there use **/file/signmultipart** to retrieve URLs to directly connect to S3 and complete the multipart with **/file/completemultipart**.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "File information",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "filename": {
                                    "type": "string"
                                },
                                "size": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "example": {
                                "filename": "api_test_file",
                                "size": 1234
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "**successful operation** returns the created file object",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    },
                    "500": {
                        "description": "**failed operation** returns an error if exception arises during data query"
                    }
                },
                "security": [
                    {
                        "datacrossway_auth": [
                            "admin"
                        ]
                    }
                ]
            },
            "patch": {
                "tags": [
                    "file"
                ],
                "summary": "Update file information in database",
                "description": "The file entry is identified by the **id** in the file object submitted to the API. The only fields that can be updated are **display_name**, **owner_id**, **collection_id**, **status**, **visibility**, and **accessibility**. Changed in fields such as **UUID** would run into conflicts with backend file localization.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "File object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "**successful operation** when file was updated",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "file updated"
                            }
                        }
                    },
                    "500": {
                        "description": "**failed operation** returns an error if exception arises during data query",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "An error occurred when updating file"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "datacrossway_auth": [
                            "admin"
                        ]
                    }
                ]
            }
        },
        "/file/{file_id}":{
            "delete": {
                "tags": [
                    "file"
                ],
                "summary": "Delete file information in database and remove from S3 cloud storage",
                "description": "To delete a file a user needs to have **file ownership** of the file or have attached **admin** role.",
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "description": "The file ID for the file to be deleted.",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "**successful operation** when file was deleted",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "file":{
                                    "$ref": "#/definitions/File"
                                }
                            },
                            "example": {
                                "message": "File deleted",
                                "file": {
                                    "id": 1,
                                    "name": "api_test_file.txt",
                                    "display_name": "new_display_name.txt",
                                    "size": 1234,
                                    "owner_id": 1,
                                    "collection_id": 1,
                                    "uuid": "7bbMZ3Fj2nTg",
                                    "date": "Wed, 06 Jul 2022 12:52:44 GMT",
                                    "status": "ready",
                                    "visibility": "visible",
                                    "accessibility": "locked"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "**permission denied** returns an error if user does not have permission to delete file",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "No permission to delete file"
                            }
                        }
                    },
                    "500": {
                        "description": "**failed operation** returns an error if exception arises during file deletion",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "An error occurred when attempting to delete file"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "datacrossway_auth": [
                            "admin"
                        ]
                    }
                ]
            }
        },
        "/file/download/{file_id}":{
            "get": {
                "tags": [
                    "file"
                ],
                "summary": "Get download link for file",
                "description": "Get signed file download URL from AWS. With this URL the user can download the file directly from S3. The URL will be signed if the user has appropriate credentials (either admin, file ownership, or read role with this resource attached). The URL expires within 1 hour.",
                "parameters": [
                    {
                        "name": "file_id",
                        "in": "path",
                        "description": "The file ID for the file to be downloaded.",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "**successful operation** URL was signed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "url":{
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "URL signed",
                                "url": "https://bucketname.s3.amazonaws.com/5HgaAsL8QZ/filename.txt?AWSAccessKeyId=AKIATLJKDSE4LLKFSignature=Ghd%D$DSF$%DJYucmapDF56WER%3D&Expires=1657190869"
                            }
                        }
                    },
                    "403": {
                        "description": "**permission denied** returns an error if user does not have permission to download file",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "No permission to download file"
                            }
                        }
                    },
                    "500": {
                        "description": "**failed operation** returns an error if exception arises during URL signing",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "An error occurred when attempting to sign URL"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "datacrossway_auth": [
                            "admin"
                        ]
                    }
                ]
            }
        },
        "/file/upload":{
            "post": {
                "tags": [
                    "file"
                ],
                "summary": " Add file database entry and get URL to upload small file",
                "description": "Add file database entry and get signed upload URL from AWS. With this URL the user can upload the file directly to S3. The URL will be signed if the user has appropriate credentials (either admin, uploader). The URL expires within 1 hour. The uploaded file is not associated to any **collection** and is thereby not discoverable outside from owner and admin. To make it discoverable the file needs to be updated with a new **collection_id**. To upload the file the signed URL expects form data. All fields under **url** need to be added to the form data.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "File name and file size in bytes",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "filename": {
                                    "type": "string"
                                },
                                "size": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "example": {
                                "filename": "api_test_file.txt",
                                "size": 1234
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "**successful operation** URL was signed",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "url":{
                                    "type": "string"
                                },
                                "file":{
                                    "$ref": "#/definitions/File"
                                }
                            },
                            "example": {
                                "message": "URL signed",
                                "url": {
                                    "fields": {
                                      "AWSAccessKeyId": "AKIATLYJBTLG2T764LJB",
                                      "key": "5SDSwiUlkoW/api_test_file.txt",
                                      "policy": "sdS3S3ssaggIjIwMjItMDctMDdSDF4DSedsvbmRpdGlvbnMiOiDFGssdfxsdOiAibXNzbS10ZXN0In0sIHsia2V5IjogIjRFUkZERVlpVTVI==sdfSDfsdfs=",
                                      "signature": "sdsX64SD$ds3n8zH+E72piAR=sdE"
                                    },
                                    "url": "https://bucketname.s3.amazonaws.com/"
                                },
                                "file": {
                                    "id": 16,
                                    "name": "api_test_file.txt",
                                    "display_name": "api_test_file.txt",
                                    "size": 1234,
                                    "owner_id": 1,
                                    "collection_id": 1,
                                    "uuid": "7bcMZ3Ij2nTb",
                                    "date": "Wed, 06 Jul 2022 12:52:44 GMT",
                                    "status": "uploading",
                                    "visibility": "hidden",
                                    "accessibility": "locked"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "**permission denied** returns an error if user does not have permission to upload file",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "No permission to upload file"
                            }
                        }
                    },
                    "500": {
                        "description": "**failed operation** returns an error if exception arises during URL signing",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "An error occurred when attempting to sign URL"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "datacrossway_auth": [
                            "admin"
                        ]
                    }
                ]
            }
        },
        "/file/startmultipart":{
            "post": {
                "tags": [
                    "file"
                ],
                "summary": " Add file database entry and get upload ID",
                "description": "Add file database entry and get upload ID for multipart upload. The upload ID is used for the **/file/signmultipart** and **/file/completemultipart**.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "File name and file size in bytes",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "filename": {
                                    "type": "string"
                                },
                                "size": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "example": {
                                "filename": "large_test_file.txt",
                                "size": 590124000
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "**successful operation** multipart upload started",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "upload_id":{
                                    "type": "string"
                                },
                                "uuid":{
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "multipart upload started",
                                "upload_id": "NZMZk1RHLSDqQugQGN8ebmss#s#CheWbaccA#rizd4IT_kDgzvWd8@#R2D2#hXCJl.JwqeDS2.9V7ZjC#C3Po#LPdZVuwEOrn0vZL93T.Q",
                                "uuid": "6sv9ULkT2UaU"
                            }
                        }
                    },
                    "403": {
                        "description": "**permission denied** returns an error if user does not have permission to upload file",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "No permission to upload file"
                            }
                        }
                    },
                    "500": {
                        "description": "**failed operation** returns an error if exception arises during multipart upload start",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "An error occurred when attempting to start multipart upload"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "datacrossway_auth": [
                            "admin"
                        ]
                    }
                ]
            }
        },
        "/file/signmultipart":{
            "post": {
                "tags": [
                    "file"
                ],
                "summary": "Get upload URL for part in multipart upload",
                "description": "Use the **upload ID** generated in **/file/startmultipart** to upload part of a file. The URL is meant to be used as a **PUT** request with body of the request being the file slice. The response header of the PUT request will contain an **ETag**. Save **ETags** and corresponding part number for **/file/completemultipart**.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "File name and file size in bytes",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "filename": {
                                    "type": "string"
                                },
                                "part_number": {
                                    "type": "int",
                                    "format": "int32"
                                },
                                "upload_id": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "filename": "large_test_file.txt",
                                "part_number": 1,
                                "upload_id": "NZMZk1RHLSDqQugQGN8ebmss#s#CheWbaccA#rizd4IT_kDgzvWd8@#R2D2#hXCJl.JwqeDS2.9V7ZjC#C3Po#LPdZVuwEOrn0vZL93T.Q"
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "**successful operation** sign multipart upload URL",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "url":{
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "multipart upload URL signed",
                                "url": "https://bucketname.s3.amazonaws.com/large_test_file.txt?uploadId=NZMSDsdf3AAdwaGN8ebmss%23s%23CheWbaccA%23rizd4IT_kDgzvWd8%40%23R2D2%23hXCJl.JwqeDS2.9V7ZjC%23C3Po%23LPdZVuwEOrn0vZL93T.Q&partNumber=1&AWSAccessKeyId=AKIATLYSDF223D3$SD2LK&Signature=kyMrpWER$#DsBxFFxhbypJTLbcsf8%3D&Expires=1657222923"
                            }
                        }
                    },
                    "403": {
                        "description": "**permission denied** returns an error if user does not have permission to upload file",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "No permission to upload file"
                            }
                        }
                    },
                    "500": {
                        "description": "**failed operation** returns an error if exception arises during multipart upload URL signing",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "An error occurred when attempting to sign multipart upload URL"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "datacrossway_auth": [
                            "admin"
                        ]
                    }
                ]
            }
        },
        "/file/completemultipart":{
            "post": {
                "tags": [
                    "file"
                ],
                "summary": "Complete multipart upload",
                "description": "Complete multipart upload. In this step all individual parts belonging to **upload ID** are stiched together to build the final file in S3. This endpoint requires an array of **{ ETag: etag, PartNumber: chunk}** objects. These have to be memorized during the use of **/file/signmultipart**. The **ETags** can be found in the response header when using the signed upload urls.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "File name and file size in bytes",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "filename": {
                                    "type": "string"
                                },
                                "upload_id": {
                                    "type": "string"
                                },
                                "parts": {
                                    "type": "array",
                                    "items": {
                                        "ETag": {
                                            "type": "string"
                                        },
                                        "PartNumber": {
                                            "type": "int",
                                            "format": "int32"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "filename": "large_test_file.txt",
                                "upload_id": "NZMZk1RHLSDqQugQGN8ebmss#s#CheWbaccA#rizd4IT_kDgzvWd8@#R2D2#hXCJl.JwqeDS2.9V7ZjC#C3Po#LPdZVuwEOrn0vZL93T.Q",
                                "parts": [
                                    {
                                        "ETag": "ASD23saSd2aSas",
                                        "PartNumber": 1
                                    },
                                    {
                                        "ETag": "xxdSsDF34Sd%Gp",
                                        "PartNumber": 2
                                    },
                                    {
                                        "ETag": "HGf52CdfKj89Dl",
                                        "PartNumber": 3
                                    }
                                ]
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "**successful operation** multipart upload complete",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "multipart upload completed"
                            }
                        }
                    },
                    "403": {
                        "description": "**permission denied** returns an error if user does not have permission to upload file",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "No permission to upload file"
                            }
                        }
                    },
                    "500": {
                        "description": "**failed operation** returns an error if exception arises during multipart completion",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "An error occurred when attempting to complete multipart upload"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "datacrossway_auth": [
                            "admin"
                        ]
                    }
                ]
            }
        },
        "/role":{
            "get": {
                "tags": [
                    "role"
                ],
                "summary": "List all roles",
                "description": "List all roles.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "**successful operation** when roles were listed",
                        "schema": {
                            "roles": {
                                "$ref": "#/definitions/RoleList"
                            },
                            "example": {
                                "roles": [
                                  {
                                    "id": 1,
                                    "name": "admin",
                                    "policies": []
                                  },
                                  {
                                    "id": 2,
                                    "name": "collection_lister",
                                    "policies": [
                                      {
                                        "action": "list",
                                        "collections": [
                                          1
                                        ],
                                        "creation_date": "Thu, 30 Jun 2022 13:42:22 GMT",
                                        "effect": "allow",
                                        "files": [],
                                        "id": 1
                                      }
                                    ]
                                  },
                                  {
                                    "id": 3,
                                    "name": "collection_reader",
                                    "policies": [
                                      {
                                        "action": "read",
                                        "collections": [
                                          2
                                        ],
                                        "creation_date": "Thu, 30 Jun 2022 13:42:22 GMT",
                                        "effect": "allow",
                                        "files": [],
                                        "id": 2
                                      }
                                    ]
                                  }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "**permission denied** returns an error if user does not have permission to list roles",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "No permission to list roles"
                            }
                        }
                    },
                    "500": {
                        "description": "**failed operation** returns an error if exception arises while listing roles",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "An error occurred when attempting to list roles"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "datacrossway_auth": [
                            "admin"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "role"
                ],
                "summary": "Create role",
                "description": "Create new roles.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Role information",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties":{
                                "rolename": {
                                    "type": "string"
                                },
                                "policies": {
                                    "type": "array",
                                    "required": false,
                                    "items": {
                                        "type": "int",
                                        "format": "int32"
                                    }
                                }
                            },
                            "example": {
                                "rolename": "test_role",
                                "policies": [
                                    1,
                                    2
                                ]
                            },
                            "required": ["rolename"]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "**successful operation** when role was created",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                },
                                "role": {
                                    "$ref": "#/definitions/Role"
                                }
                            },
                            "example": {
                                "message": "role created",
                                "role": {
                                    "id": 8,
                                    "name": "test_role",
                                    "policies": [
                                    {
                                        "action": "list",
                                        "collections": [
                                        1
                                        ],
                                        "creation_date": "Thu, 30 Jun 2022 13:42:22 GMT",
                                        "effect": "allow",
                                        "files": [],
                                        "id": 1
                                    },
                                    {
                                        "action": "read",
                                        "collections": [
                                        2
                                        ],
                                        "creation_date": "Thu, 30 Jun 2022 13:42:22 GMT",
                                        "effect": "allow",
                                        "files": [],
                                        "id": 2
                                    }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "**permission denied** returns an error if user does not have permission to create roles",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "No permission to create roles"
                            }
                        }
                    },
                    "500": {
                        "description": "**failed operation** returns an error if exception arises while creating roles",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "An error occurred when attempting to create roles"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "datacrossway_auth": [
                            "admin"
                        ]
                    }
                ]
            },
            "patch": {
                "tags": [
                    "role"
                ],
                "summary": "Update role",
                "description": "Update role.",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "**successful operation** when role was updated",
                        "schema": {
                            "roles": {
                                "$ref": "#/definitions/RoleList"
                            },
                            "example": {
                                "roles": [
                                    {
                                        "id": 1,
                                        "name": "admin"
                                    },
                                    {
                                        "id": 2,
                                        "name": "collection_a_lister"
                                    },
                                    {
                                        "id": 3,
                                        "name": "collection_a_reader"
                                    }
                                ]
                            }
                        }
                    },
                    "403": {
                        "description": "**permission denied** returns an error if user does not have permission to update role",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "No permission to update role"
                            }
                        }
                    },
                    "500": {
                        "description": "**failed operation** returns an error if exception arises while updating role",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "An error occurred when attempting to update role"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "datacrossway_auth": [
                            "admin"
                        ]
                    }
                ]
            }
        },
        "/role/{role_id}":{
            "delete": {
                "tags": [
                    "role"
                ],
                "summary": "Delete role",
                "description": "To delete role the user requires admin rights.",
                "parameters": [
                    {
                        "name": "role_id",
                        "in": "path",
                        "description": "The role ID for the role to be deleted.",
                        "required": true,
                        "type": "integer",
                        "default": 1
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "**successful operation** when role was deleted",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "role deleted"
                            }
                        }
                    },
                    "403": {
                        "description": "**permission denied** returns an error if user does not have permission to delete role",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "No permission to delete role"
                            }
                        }
                    },
                    "500": {
                        "description": "**failed operation** returns an error if exception arises during role deletion",
                        "schema": {
                            "type": "object",
                            "properties":{
                                "message": {
                                    "type": "string"
                                }
                            },
                            "example": {
                                "message": "An error occurred when attempting to delete role"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "datacrossway_auth": [
                            "admin"
                        ]
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "datacrossway_auth": {
            "type": "apiKey",
            "in": "header",
            "name": "x-api-key",
            "description": "Datacrossways supports two types of user authentification. For users of the graphical user frontend the method of authentification is **Google OAuth**. First [log into account](/api/user/login) to use protected endpoints through the Swagger UI. To access the API programatically you can use a user **access key** which can be generated through the Datacrossways interface. The key will have identical user rights as the user who created it.",
            "scopes": {
                "admin": "admin rights to api",
                "user": "regular user",
                "uploader": "regular user with upload rights"
            }
        }
    },
    "definitions": {
        "FileList": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/File"
            }
        },
        "File": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "uuid": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "format": "int64"
                },
                "collection_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "owner_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "owner_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "uploading",
                        "ready"
                    ]
                },
                "accessibility": {
                    "type": "string",
                    "enum": [
                        "locked",
                        "open"
                    ]
                },
                "visibility": {
                    "type": "string",
                    "enum": [
                        "hidden",
                        "visible"
                    ]
                }
            },
            "example": {
                "id": 1,
                "name": "api_test_file.txt",
                "display_name": "new_display_name.txt",
                "size": 1234,
                "owner_id": 1,
                "collection_id": 1,
                "uuid": "7bbMZ3Fj2nTg",
                "date": "Wed, 06 Jul 2022 12:52:44 GMT",
                "status": "ready",
                "visibility": "visible",
                "accessibility": "locked"
            }
        },
        "RoleList": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Role"
            }
        },
        "Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                },
                "policies": {
                    "$ref": "#/definitions/PolicyList"
                }
            },
            "example":{
                "id": 1,
                "name": "admin"
            }
        },
        "PolicyList": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Policy"
            }
        },
        "Policy": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "effect": {
                    "type": "string"
                },
                "action": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "string"
                },
                "collections": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "example": {
                "id": 2,
                "action": "read",
                "creation_date": "Thu, 30 Jun 2022 13:42:22 GMT",
                "effect": "allow",
                "collections": [
                    1,
                    2,
                    6
                ],
                "files": [
                    3,
                    6,
                    19
                ]
            }
        },
        "CollectionList": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Policy"
            }
        },
        "Collection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "uuid": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "creation_date": {
                    "type": "string"
                },
                "parent_collection_id": {
                    "type": "int",
                    "format": "int32"
                },
                "owner_id": {
                    "type": "int",
                    "format": "int32"
                },
                "accessibility": {
                    "type": "string",
                    "enum": [
                        "locked",
                        "open"
                    ]
                },
                "visibility": {
                    "type": "string",
                    "enum": [
                        "hidden",
                        "visible"
                    ]
                },
                "collections": {
                    "$ref": "#/definitions/CollectionList"
                },
                "files": {
                    "$ref": "#/definitions/FileList"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User Status"
                }
            },
            "xml": {
                "name": "User"
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}